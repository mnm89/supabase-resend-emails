CREATE TABLE public.contact_messages (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),

  -- Contact Information
  first_name VARCHAR(100) NOT NULL CHECK (char_length(first_name) >= 2),
  last_name VARCHAR(100) NOT NULL CHECK (char_length(last_name) >= 2),
  email VARCHAR(255) NOT NULL CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'),
  phone VARCHAR(20) NOT NULL CHECK (char_length(phone) >= 8 AND phone ~ '^[0-9+\-\s()]+$'),

  -- Message Details
  subject VARCHAR(255) NOT NULL CHECK (char_length(subject) >= 5),
  message TEXT NOT NULL CHECK (char_length(message) >= 10),

  -- User & Agent References
  user_id UUID NULL DEFAULT auth.uid(),
  agent_id UUID NULL,

  -- Agent Reply
  agent_reply TEXT NULL CHECK (char_length(agent_reply) >= 5),

  -- Foreign Key Constraints
  CONSTRAINT fk_contact_messages_user FOREIGN KEY (user_id) REFERENCES auth.users (id) ON DELETE SET NULL,
  CONSTRAINT fk_contact_messages_agent FOREIGN KEY (agent_id) REFERENCES auth.users (id) ON DELETE SET NULL
);

-- Add Indexes for Performance
CREATE INDEX idx_contact_messages_email ON public.contact_messages(email);
CREATE INDEX idx_contact_messages_user_id ON public.contact_messages(user_id);
CREATE INDEX idx_contact_messages_agent_id ON public.contact_messages(agent_id);


ALTER TABLE public.contact_messages ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can view their own messages"
ON public.contact_messages
FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Users can create a contact message"
ON public.contact_messages
FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can delete their own messages"
ON public.contact_messages
FOR DELETE
USING (auth.uid() = user_id);

CREATE POLICY "Agents can reply to assigned messages"
ON public.contact_messages
FOR UPDATE
USING (auth.uid() = agent_id);

--- Auto-Delete Messages After 90 Days

-- Ensure the pg_cron extension is created (only needed once)
create extension if not exists pg_cron with schema extensions;

-- Grant usage to public (optional, but required if non-superusers need access)
grant usage on schema extensions to public;
grant all privileges on all tables in schema extensions to postgres;

SELECT cron.schedule(
  'delete_old_messages', 
  '0 0 * * *',  -- Runs every midnight
  $$DELETE FROM public.contact_messages WHERE created_at < now() - INTERVAL '90 days'$$
);
